#!/usr/bin/env php
<?php

use Yiisoft\Dev\Commands\CommitCommand;
use Yiisoft\Dev\Commands\InstallCommand;
use Yiisoft\Dev\Commands\PushCommand;
use Yiisoft\Dev\Commands\ReplicateCommand;
use Yiisoft\Dev\Commands\StatusCommand;
use Yiisoft\Dev\Commands\UpdateCommand;
use Yiisoft\Dev\Console;

if (PHP_MAJOR_VERSION < 7) {
    echo 'PHP 7.2 or higher is required to work with this tool. Yii 3.0 requires PHP 7.2!' . PHP_EOL;
    exit(1);
}
if (!isset($argv)) {
    $argv = $_SERVER['argv'];
}

$command = $argv[1] ?? 'help';

require __DIR__ . '/src/Console.php';
require __DIR__ . '/src/Tools.php';
require __DIR__ . '/src/PackageStorage.php';
require __DIR__ . '/src/commands/CommandInterface.php';

switch ($command) {
    case 'install':

        require __DIR__ . '/src/commands/InstallCommand.php';
        $command = new InstallCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'update':

        require __DIR__ . '/src/commands/UpdateCommand.php';
        $command = new UpdateCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'status':

        require __DIR__ . '/src/commands/StatusCommand.php';
        $command = new StatusCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'replicate':
        require __DIR__ . '/src/commands/ReplicateCommand.php';
        $command = new ReplicateCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'commit':
        require __DIR__ . '/src/commands/CommitCommand.php';
        $command = new CommitCommand($argv[2] ?? null, $argv[3] ?? null);
        $command->run();

        break;
    case 'push':
        require __DIR__ . '/src/commands/PushCommand.php';
        $command = new PushCommand($argv[2] ?? null);
        $command->run();

        break;
    case 'lint':

        // TODO implement
        Console::stdErrLn('Not implemented yet!', 31);

        break;
    default:
        Console::help();
        exit(1);
}
